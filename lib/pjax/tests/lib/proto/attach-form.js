var tape=require("tape"),on=require("../../../lib/events/on"),trigger=require("../../../lib/events/trigger"),attachForm=require("../../../lib/proto/attach-form"),attr="data-pjax-state";tape("test attach form prototype method",function(t){var e=document.createElement("form"),o=!1;attachForm.call({options:{currentUrlFullReload:!0},loadUrl:function(){o=!0}},e);var a=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search;e.action="http://external.com/",trigger(e,"submit"),t.equal(e.getAttribute(attr),"external","external url stop behavior"),e.action=a+"#anchor",trigger(e,"submit"),t.equal(e.getAttribute(attr),"anchor","internal anchor stop behavior"),window.location.hash="#anchor",e.action=a+"#another-anchor",trigger(e,"submit"),t.equal(e.getAttribute(attr),"anchor","different anchors stop behavior"),window.location.hash="",e.action=a+"#",trigger(e,"submit"),t.equal(e.getAttribute(attr),"anchor-empty","empty anchor stop behavior"),e.action=window.location.href,trigger(e,"submit"),t.equal(e.getAttribute(attr),"reload","submitting when currentUrlFullReload is true will submit normally, without XHR"),t.equal(o,!1,"loadUrl() not called"),e.action=window.location.protocol+"//"+window.location.host+"/internal",e.method="POST",trigger(e,"submit"),t.equal(e.getAttribute(attr),"submit","triggering a POST request to the next page"),t.equal(o,!0,"loadUrl() called correctly"),o=!1,e.setAttribute(attr,""),e.action=window.location.protocol+"//"+window.location.host+"/internal",e.method="GET",trigger(e,"submit"),t.equal(e.getAttribute(attr),"submit","triggering a GET request to the next page"),t.equal(o,!0,"loadUrl() called correctly"),t.end()}),tape("test attach form preventDefaulted events",function(t){var e=!1,o=document.createElement("form");on(o,"submit",function(t){t.preventDefault()}),attachForm.call({options:{},loadUrl:function(){e=!0}},o),o.action="#",trigger(o,"submit"),t.equal(e,!1,"events that are preventDefaulted should not fire callback"),t.end()}),tape("test options are not modified by attachForm",function(t){var e=document.createElement("form"),o={foo:"bar"};attachForm.call({options:o,loadUrl:function(){}},e),e.action=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,e.method="GET",trigger(e,"submit"),t.equal(1,Object.keys(o).length,"options object that is passed in should not be modified"),t.equal("bar",o.foo,"options object that is passed in should not be modified"),t.end()}),tape("test form elements parsed correctly",function(t){t.plan(1);var e=document.createElement("form"),o=document.createElement("input");o.name="input",o.value="value",e.appendChild(o);var a=[{name:"input",value:"value"}],r={options:{},loadUrl:function(e,o){t.same(o.requestOptions.requestParams,a,"form elements parsed correctly")}};attachForm.call(r,e),e.action=window.location.protocol+"//"+window.location.host+"/internal",trigger(e,"submit"),t.end()}),tape('test form.enctype="multipart/form-data"',function(t){t.plan(4);var e=document.createElement("form");e.enctype="multipart/form-data";var o=document.createElement("input");o.name="input",o.value="value",e.appendChild(o);var a={options:{},loadUrl:function(e,o){t.equals(o.requestOptions.requestParams,void 0,"form elements not parsed manually"),t.true(o.requestOptions.formData instanceof FormData,"requestOptions.formData is a FormData"),t.equals(Array.from(o.requestOptions.formData.entries()).length,1,"correct number of FormData elements"),t.equals(o.requestOptions.formData.get("input"),"value","FormData element value set correctly")}};attachForm.call(a,e),e.action=window.location.protocol+"//"+window.location.host+"/internal",trigger(e,"submit"),t.end()});