var tape=require("tape"),on=require("../../../lib/events/on"),trigger=require("../../../lib/events/trigger"),attachLink=require("../../../lib/proto/attach-link"),attr="data-pjax-state";tape("test attach link prototype method",function(t){var e=document.createElement("a"),a=!1;attachLink.call({options:{},loadUrl:function(){a=!0}},e);var o=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search;e.href=o,trigger(e,"click",{metaKey:!0}),t.equal(e.getAttribute(attr),"modifier","event key modifier stop behavior"),e.href="http://external.com/",trigger(e,"click"),t.equal(e.getAttribute(attr),"external","external url stop behavior"),window.location.hash="#anchor",e.href=o+"#anchor",trigger(e,"click"),t.equal(e.getAttribute(attr),"anchor","internal anchor stop behavior"),e.href=o+"#another-anchor",trigger(e,"click"),t.equal(e.getAttribute(attr),"anchor","different anchors stop behavior"),window.location.hash="",e.href=o+"#",trigger(e,"click"),t.equal(e.getAttribute(attr),"anchor-empty","empty anchor stop behavior"),e.href=window.location.protocol+"//"+window.location.host+"/internal",trigger(e,"click"),t.equals(e.getAttribute(attr),"load","triggering an internal link sets the state attribute to 'load'"),t.equals(a,!0,"triggering an internal link actually loads the page"),t.end()}),tape("test attach link preventDefaulted events",function(t){var e=!1,a=document.createElement("a");on(a,"click",function(t){t.preventDefault()}),attachLink.call({options:{},loadUrl:function(){e=!0}},a),a.href="#",trigger(a,"click"),t.equal(e,!1,"events that are preventDefaulted should not fire callback"),t.end()}),tape("test options are not modified by attachLink",function(t){var e=document.createElement("a"),a={foo:"bar"};attachLink.call({options:a,loadUrl:function(){}},e),e.href=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,trigger(e,"click"),t.equal(1,Object.keys(a).length,"options object that is passed in should not be modified"),t.equal("bar",a.foo,"options object that is passed in should not be modified"),t.end()}),tape("test link triggered by keyboard",function(t){var e=document.createElement("a"),a={options:{},loadUrl:function(){t.equal(e.getAttribute(attr),"load","triggering a internal link actually loads the page")}};t.plan(3),attachLink.call(a,e),e.href=window.location.protocol+"//"+window.location.host+"/internal",trigger(e,"keyup",{keyCode:14}),t.equal(e.getAttribute(attr),"","keycode other than 13 doesn't trigger anything"),trigger(e,"keyup",{keyCode:13,metaKey:!0}),t.equal(e.getAttribute(attr),"modifier","event key modifier stop behavior"),trigger(e,"keyup",{keyCode:13}),t.end()}),tape("test link with the same URL as the current one, when currentUrlFullReload set to true",function(t){var e=document.createElement("a"),a={options:{currentUrlFullReload:!0},reload:function(){t.pass("this.reload() was called correctly")},loadUrl:function(){t.fail("loadUrl() was called wrongly")}};t.plan(2),attachLink.call(a,e),e.href=window.location.href,trigger(e,"click"),t.equal(e.getAttribute(attr),"reload","reload stop behavior"),t.end()});